{"version":3,"sources":["spotify.js","Login.js","SidebarOption.js","DataLayer.js","Sidebar.js","Header.js","SongRow.js","Body.js","Footer.js","Player.js","App.js","serviceWorker.js","reducer.js","index.js"],"names":["accessUrl","join","Login","className","src","alt","href","SidebarOption","title","Icon","DataLayerContext","createContext","DataLayer","initialState","reducer","children","Provider","value","useReducer","useDataLayerValue","useContext","Sidebar","playlists","HomeIcon","SearchIcon","LibraryMusicIcon","items","map","playlist","name","Header","spotify","user","placeholder","type","Avatar","images","url","display_name","SongRow","track","album","artists","artist","Body","discover_weekly","description","fontSize","tracks","item","Footer","Grid","container","spacing","xs","Slider","Player","SpotifyWebApi","App","token","dispatch","useEffect","hash","window","location","substring","split","reduce","initial","parts","decodeURIComponent","_token","access_token","setAccessToken","getMe","then","getUserPlaylists","console","log","getPlaylist","response","Boolean","hostname","match","state","action","ReactDOM","render","StrictMode","playing","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.f5c87e78.chunk.js","sourcesContent":["// https://developer.spotify.com/documentation/web-playback-sdk/quick-start/#\r\nexport const authEndpoint = \"https://accounts.spotify.com/authorize\";\r\n// Replace with your app's client ID, redirect URI and desired scopes\r\nconst clientId = \"37340caaf47a4d1caa3f592adfeb5882\";\r\nconst redirectUri = \"http://localhost:3000/\";\r\nconst scopes = [\r\n  \"user-read-currently-playing\",\r\n  \"user-read-recently-played\",\r\n  \"user-read-playback-state\",\r\n  \"user-top-read\",\r\n  \"user-modify-playback-state\",\r\n];\r\n\r\nexport const getTokenFromResponse = () => {\r\n    return window.location.hash\r\n      .substring(1)\r\n      .split(\"&\")\r\n      .reduce((initial, item) => {\r\n        var parts = item.split(\"=\");\r\n        initial[parts[0]] = decodeURIComponent(parts[1]);\r\n  \r\n        return initial;\r\n      }, {});\r\n  };\r\n\r\n\r\nexport const accessUrl = `${authEndpoint}?client_id=${clientId}&redirect_uri=${redirectUri}&scope=${scopes.join(\r\n    \"%20\"\r\n  )}&response_type=token&show_dialog=true`;\r\n\r\n","import React from 'react';\r\nimport './Login.css';\r\nimport { accessUrl } from './spotify';\r\n\r\nfunction Login() {\r\n    return (\r\n        <div className=\"login\">\r\n           \r\n    <img\r\n        src=\"https://getheavy.com/wp-content/uploads/2019/12/spotify2019-830x350.jpg\"\r\n        alt=\"\"\r\n      />\r\n      <a href={accessUrl}>LOGIN WITH SPOTIFY</a>\r\n        </div>\r\n    )\r\n} \r\n\r\nexport default Login\r\n","import React from 'react'\r\nimport './SidebarOption.css';\r\nfunction SidebarOption({ title, Icon}) {\r\n    return (\r\n        <div className=\"sideBarOption\">\r\n            {Icon &&  <Icon className=\"sidebarOption__icon\"/>}\r\n {Icon ? <h4>{title}</h4> : <p>{title}</p>} \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SidebarOption\r\n","import React, {useContext, useReducer, createContext} from 'react';\r\n\r\nexport const DataLayerContext= createContext(); \r\n\r\nexport const DataLayer= ({ initialState, reducer, children}) =>(\r\n  <DataLayerContext.Provider value={useReducer(reducer,initialState)}>\r\n      {children}\r\n  </DataLayerContext.Provider>\r\n); \r\n\r\nexport const useDataLayerValue= () => useContext(DataLayerContext);","import React from 'react';\r\nimport './Sidebar.css';\r\nimport SidebarOption from './SidebarOption';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport LibraryMusicIcon from '@material-ui/icons/LibraryMusic';\r\nimport { useDataLayerValue } from './DataLayer';\r\n\r\nfunction Sidebar() {\r\n    const [{playlists},dispatch]= useDataLayerValue();\r\n\r\n    return (\r\n        <div className=\"sidebar\">\r\n          <img\r\n        className=\"sidebar__logo\"\r\n        src=\"https://getheavy.com/wp-content/uploads/2019/12/spotify2019-830x350.jpg\"\r\n        alt=\"\"\r\n      />\r\n      <SidebarOption Icon={HomeIcon} title=\"Home\" />\r\n      <SidebarOption Icon={SearchIcon}   title=\"Search\" />\r\n      <SidebarOption Icon={LibraryMusicIcon}  title=\"Your Library\"/>\r\n     <br />\r\n     <strong className=\"sidebar__title\">PLAYLISTS</strong>\r\n     <hr />\r\n      {playlists?.items?.map(playlist => (\r\n          <SidebarOption title={playlist.name} />\r\n      ))}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Sidebar\r\n","import React from 'react'\r\nimport './Header.css';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport { Avatar } from '@material-ui/core';\r\nimport { useDataLayerValue } from './DataLayer';\r\n\r\nfunction Header({spotify}) {\r\n  const[{user},dispatch]= useDataLayerValue();\r\n\r\n    return (\r\n        <div className=\"header\">\r\n          <div className=\"header__left\">\r\n        <SearchIcon />\r\n        <input placeholder=\"Search for Artists,Songs\" type=\"text\" />\r\n          </div>\r\n          <div className=\"header__right\">\r\n           <Avatar src={user?.images[0].url} alt={user?.display_name} />\r\n         <h4>{user?.display_name}</h4>\r\n          </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport './SongRow.css';\r\n\r\nfunction SongRow({ track }) {\r\n    return (\r\n        <div className=\"songRow\">\r\n    <img className=\"songRow__album\" src={track.album.images[0].url} \r\n    alt={track.album.name} />\r\n    <div className=\"songRow__info\">\r\n    <h1>{track.name}</h1>\r\n    <p>\r\n        {track.artists.map((artist) => artist.name).join(\", \")} - {\" \"}\r\n        {track.album.name}\r\n    </p>\r\n    </div>\r\n        </div>\r\n    );\r\n} \r\n\r\nexport default SongRow\r\n","import React from 'react'\r\nimport './Body.css'; \r\nimport Header from './Header';\r\nimport { useDataLayerValue } from './DataLayer';\r\nimport PlayCircleFilledIcon from \"@material-ui/icons/PlayCircleFilled\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\r\nimport SongRow from './SongRow';\r\nfunction Body({ spotify }) {\r\n    const [{discover_weekly},dispatch]= useDataLayerValue();\r\n    return (\r\n      \r\n        <div className=\"body\">\r\n         <Header spotify={spotify}/>\r\n        \r\n        <div className=\"body__info\">\r\n           <img src={discover_weekly?.images[0].url} alt=\"\"/>\r\n           <div className=\"body_infoText\">\r\n            <strong>PLAYLISTS</strong>   \r\n            <h2>Discover Weekly</h2>\r\n            <p>{discover_weekly?.description}</p>\r\n            </div> \r\n        </div>\r\n        \r\n        <div className=\"body__songs\">\r\n            <div className=\"body__icons\">\r\n              <PlayCircleFilledIcon  className=\"body__shuffle\" />\r\n              <FavoriteIcon fontSize=\"large\" />\r\n              <MoreHorizIcon />\r\n            </div>\r\n        </div>\r\n        {discover_weekly?.tracks.items.map(item =>(\r\n            <SongRow track={item.track} />\r\n            \r\n        ))}\r\n        </div>\r\n    )\r\n} \r\n\r\nexport default Body\r\n","import React from 'react'\r\nimport './Footer.css';\r\nimport {Grid, Slider} from '@material-ui/core';\r\nimport PlayCircleOutlineIcon from \"@material-ui/icons/PlayCircleOutline\";\r\nimport SkipPreviousIcon from \"@material-ui/icons/SkipPrevious\";\r\nimport SkipNextIcon from \"@material-ui/icons/SkipNext\";\r\nimport ShuffleIcon from \"@material-ui/icons/Shuffle\";\r\nimport RepeatIcon from \"@material-ui/icons/Repeat\";\r\nimport VolumeDownIcon from \"@material-ui/icons/VolumeDown\";\r\nimport PauseCircleOutlineIcon from \"@material-ui/icons/PauseCircleOutline\";\r\nimport PlaylistPlayIcon from \"@material-ui/icons/PlaylistPlay\";\r\nfunction Footer() {\r\n    return (\r\n        <div className=\"footer\">\r\n           <div className=\"footer__left\">\r\n       \r\n        <img\r\n          className=\"footer__albumLogo\"\r\n          src='https://upload.wikimedia.org/wikipedia/commons/thumb/a/a3/Charlie_Puth_-_Attention_%28Official_Single_Cover%29.png/1024px-Charlie_Puth_-_Attention_%28Official_Single_Cover%29.png'\r\n          alt=''\r\n        />\r\n       <div className=\"footer__songInfo\">\r\n            <h4>Attention</h4>\r\n            <p>Charlie Puth</p>\r\n          </div>\r\n        \r\n      </div>\r\n         <div className=\"footer__center\">\r\n       <ShuffleIcon className=\"footer__green\"/>\r\n       <SkipPreviousIcon className=\"footer__icon\"/>\r\n       <PlayCircleOutlineIcon fontSize=\"large\" className=\"footer__icon\"/>\r\n       <SkipNextIcon className=\"footer__icon\"/>\r\n       <RepeatIcon className=\"footer__green\"/>\r\n             </div>\r\n             <div className=\"footer__right\">\r\n        <Grid container spacing={2}>\r\n            <Grid item>\r\n                <PlaylistPlayIcon />\r\n            </Grid>\r\n            <Grid item>\r\n                <VolumeDownIcon />\r\n            </Grid>\r\n            <Grid item xs>\r\n                <Slider />\r\n            </Grid>\r\n        </Grid>\r\n             </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import React from 'react'\r\nimport Sidebar from './Sidebar'\r\nimport Body from './Body'\r\nimport './Player.css';\r\nimport Footer from './Footer';\r\n\r\nfunction Player({ spotify }) {\r\n    return (\r\n        <div className=\"player\">\r\n            <div className=\"player__body\">\r\n                <Sidebar />\r\n                <Body />\r\n            </div>\r\n  <Footer/>\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default Player\r\n","import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Login from './Login';\nimport { getTokenFromResponse } from './spotify';\nimport SpotifyWebApi from 'spotify-web-api-js';\nimport Player from './Player';\nimport { useDataLayerValue } from './DataLayer';\n\nconst spotify= new SpotifyWebApi();\n\nfunction App() {\n  const [{user,token},dispatch]= useDataLayerValue();\n\n  useEffect(()=>{\n     const hash= getTokenFromResponse();\n     window.location.hash=\"\";\n     const _token= hash.access_token;\n     if(_token){\n      dispatch({\n        type: 'SET_TOKEN',\n        token: _token\n      });\n       spotify.setAccessToken(_token);\n       spotify.getMe().then(user =>{\n      \n        dispatch({\n        type: 'SET_USER',\n        user: user\n      })\n\n       });\n\n       spotify.getUserPlaylists().then((playlists) =>{\n         console.log(playlists);\n        dispatch({\n          type: 'SET_PLAYLISTS',\n          playlists: playlists,\n        })\n       });\n\n       spotify.getPlaylist('37i9dQZF1DX82CY3GzF2m6').then((response) =>{\n           dispatch({\n             type: \"SET_DISCOVER_WEEKLY\",\n             discover_weekly: response\n           })\n       });\n\n       console.log(token);\n\n     }\n\n  },[]);\n\nreturn (\n    <div className=\"app\">\n   \n    {\n      token ? (\n        <Player spotify={spotify}></Player>\n      ) : <Login />\n    }\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","export const initialState= {\r\n    user: null,\r\n    playlists: [],\r\n    playing: false,\r\n    item: null,\r\n    discover_weekly: null,\r\n  /*  token: 'BQBDUjTQEFfNJNOVbrZSf4l-CWa1CoJuDTr8oJRsNCx_YSY3KHKTXKEH_tF82df25oVuqcqet5WI9WZyjyOyvSebK0kCejORlM1XkVOePPhaZJBxuN8Y8W0jPQ5ZtOzgWw_GvEWGjG4pNbnwpZL-j6Rn41cwysZy-bw09QfQ-rPPPhja0Ecu' \r\n */}\r\n\r\n\r\nconst reducer= (state,action) =>{\r\n     console.log(action);\r\n\r\n     switch(action.type){\r\n         case 'SET_USER':\r\n               return {\r\n                   ...state,\r\n                   user:action.user\r\n               }\r\n        case 'SET_TOKEN':\r\n            return {\r\n                ...state,\r\n                token: action.token\r\n            }\r\n        case 'SET_PLAYLISTS':\r\n            return{\r\n                ...state,\r\n                playlists: action.playlists\r\n            }\r\n        case 'SET_DISCOVER_WEEKLY':\r\n            return{\r\n                ...state,\r\n                discover_weekly: action.discover_weekly\r\n            }\r\n        default:\r\n            return state;\r\n     }\r\n}\r\n\r\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { DataLayer } from './DataLayer';\nimport reducer, { initialState } from './reducer';\n\nReactDOM.render(\n  <React.StrictMode>\n    <DataLayer initialState={initialState} reducer={reducer}>\n    <App />\n    </DataLayer>\n    \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}